% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DDRTree.R
\name{DDRTree}
\alias{DDRTree}
\title{Perform DDRTree construction}
\usage{
DDRTree(
  X,
  dimensions = 2,
  initial_method = NULL,
  maxIter = 20,
  sigma = 0.001,
  lambda = NULL,
  ncenter = NULL,
  param.gamma = 10,
  tol = 0.001,
  verbose = F,
  ...
)
}
\arguments{
\item{X}{a matrix with \eqn{\mathbf{D \times N}} dimension which is needed to perform DDRTree construction}

\item{dimensions}{reduced dimension}

\item{initial_method}{a function to take the data transpose of X as input and then output the reduced dimension,
row number should not larger than observation and column number should not be larger than variables (like isomap may only
return matrix on valid sample sets). Sample names of returned reduced dimension should be preserved.}

\item{maxIter}{maximum iterations}

\item{sigma}{bandwidth parameter}

\item{lambda}{regularization parameter for inverse graph embedding}

\item{ncenter}{number of nodes allowed in the regularization graph}

\item{param.gamma}{regularization parameter for k-means (the prefix of 'param' is used to avoid name collision with gamma)}

\item{tol}{relative objective difference}

\item{verbose}{emit extensive debug output}

\item{...}{additional arguments passed to DDRTree}
}
\value{
a list with W, Z, stree, Y, history
W is the orthogonal set of d (dimensions) linear basis vector
Z is the reduced dimension space
stree is the smooth tree graph embedded in the low dimension space
Y represents latent points as the center of Z
}
\description{
Perform DDRTree construction
}
\examples{
data('iris')
subset_iris_mat <- as.matrix(t(iris[c(1, 2, 52, 103), 1:4])) #subset the data
#run DDRTree with ncenters equal to species number
DDRTree_res <- DDRTree(subset_iris_mat, dimensions = 2, maxIter = 5, sigma = 1e-2,
lambda = 1, ncenter = 3, param.gamma = 10, tol = 1e-2, verbose = FALSE)
Z <- DDRTree_res$Z #obatain matrix
Y <- DDRTree_res$Y
stree <- DDRTree_res$stree
plot(Z[1, ], Z[2, ], col = iris[c(1, 2, 52, 103), 'Species']) #reduced dimension
legend("center", legend = unique(iris[c(1, 2, 52, 103), 'Species']), cex=0.8,
col=unique(iris[c(1, 2, 52, 103), 'Species']), pch = 1) #legend
title(main="DDRTree reduced dimension", col.main="red", font.main=4)
dev.off()
plot(Y[1, ], Y[2, ], col = 'blue', pch = 17) #center of the Z
title(main="DDRTree smooth principal curves", col.main="red", font.main=4)

#run DDRTree with ncenters equal to species number
DDRTree_res <- DDRTree(subset_iris_mat, dimensions = 2, maxIter = 5, sigma = 1e-3,
lambda = 1, ncenter = NULL,param.gamma = 10, tol = 1e-2, verbose = FALSE)
Z <- DDRTree_res$Z #obatain matrix
Y <- DDRTree_res$Y
stree <- DDRTree_res$stree
plot(Z[1, ], Z[2, ], col = iris[c(1, 2, 52, 103), 'Species']) #reduced dimension
legend("center", legend = unique(iris[c(1, 2, 52, 103), 'Species']), cex=0.8,
col=unique(iris[c(1, 2, 52, 103), 'Species']), pch = 1) #legend
title(main="DDRTree reduced dimension", col.main="red", font.main=4)
dev.off()
plot(Y[1, ], Y[2, ], col = 'blue', pch = 2) #center of the Z
title(main="DDRTree smooth principal graphs", col.main="red", font.main=4)
}
